'use strict';
const bcrypt = require('bcryptjs')

module.exports = (sequelize, DataTypes) => {
  const User = sequelize.define('User', {
    userName: {
      type: DataTypes.STRING(50),
      unique: true
    },
    email: {
      type: DataTypes.STRING(50),
      allowNull: false,
      unique: true
    },
    hashedPassword: {
      type: DataTypes.STRING.BINARY,
      allowNull: false
    },
    profilePicPath: {
      type: DataTypes.STRING(255),
    }
  }, {});
  User.associate = function (models) {
    // associations can be defined here
    User.hasMany(models.Post, {
      as: "posts",
      foreignKey: "userId",
    });
    User.hasMany(models.Comment, {
      foreignKey: "userId",
    });
    User.hasMany(models.Like, {
      foreignKey: "userId",
    });
    User.belongsToMany(models.User, {
      through: "Follows",
      otherKey: "followingId",
      foreignKey: "followerId",
      as: "following"
    });
    User.belongsToMany(models.User, {
      through: "Follows",
      otherKey: "followerId",
      foreignKey: "followingId",
      as: "followers",
    });
  };
  User.prototype.validatePassword = function (password) {
    return bcrypt.compareSync(password, this.hashedPassword.toString());
  };
  return User;
};
